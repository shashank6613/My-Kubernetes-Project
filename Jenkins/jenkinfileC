pipeline { 
    agent any

    environment {
        CLUSTER_NAME = 'app-clus'
        REGION = 'us-west-2'
    }

    stages {
        stage('Trigger Jenkinsfile-1 (EKS Cluster Creation)') {
            steps {
                echo "üöÄ Triggering Jenkinsfile-1 to create EKS cluster..."
                build job: 'Create-EKS-Cluster', wait: true, parameters: [
                    string(name: 'CLUSTER_NAME', value: CLUSTER_NAME),
                    string(name: 'REGION', value: REGION)
                ]
            }
        }

        stage('Wait for EKS Cluster to Become ACTIVE') {
            steps {
                echo "üîç Waiting for EKS cluster '${CLUSTER_NAME}' to become ACTIVE..."
                timeout(time: 15, unit: 'MINUTES') {
                    waitUntil {
                        def status = sh(
                            script: """
                                aws eks describe-cluster \
                                    --name ${CLUSTER_NAME} \
                                    --region ${REGION} \
                                    --query 'cluster.status' \
                                    --output text
                            """,
                            returnStdout: true
                        ).trim()
                        echo "EKS Cluster status: ${status}"
                        return status == "ACTIVE"
                    }
                }
            }
        }

        stage('Trigger Jenkinsfile-2 (Build & Update Manifests)') {
            steps {
                echo "üõ†Ô∏è Triggering Jenkinsfile-2 to build app and update manifests..."
                build job: 'Deploy-OnEKS-Cluster', wait: true, parameters: [
                    string(name: 'CLUSTER_NAME', value: CLUSTER_NAME),
                    string(name: 'REGION', value: REGION)
                ]
            }
        }
    }

    post {
        success {
            echo "‚úÖ All stages completed successfully. ArgoCD will deploy from updated manifests."
        }
        failure {
            echo "‚ùå Pipeline failed. Check logs and resolve issues."
        }
    }
}
