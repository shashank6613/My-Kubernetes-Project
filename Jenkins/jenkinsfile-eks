pipeline {
    agent any

    environment {
        AWS_CREDENTIALS_ID = 'aws-creds'
        CLUSTER_NAME = 'app-clus'
        REGION = 'us-west-2'
    }

    stages {
        stage('Check for Existing EKS Cluster') {
            steps {
                script {
                    echo "üîç Checking if EKS cluster '${CLUSTER_NAME}' already exists..."
                    withAWS(credentials: "${AWS_CREDENTIALS_ID}", region: "${REGION}") {
                        def clusterStatus = sh(
                            script: """
                                aws eks describe-cluster \
                                    --name ${CLUSTER_NAME} \
                                    --region ${REGION} \
                                    --query 'cluster.status' \
                                    --output text || echo "NOTFOUND"
                            """,
                            returnStdout: true
                        ).trim()

                        if (clusterStatus == "ACTIVE" || clusterStatus == "CREATING") {
                            echo "‚úÖ Cluster '${CLUSTER_NAME}' already exists with status: ${clusterStatus}"
                            currentBuild.result = 'SUCCESS'
                            return
                        } else {
                            echo "üöÄ Cluster not found. Proceeding to creation..."
                        }
                    }
                }
            }
        }

        stage('Create EKS Cluster') {
            when {
                expression {
                    currentBuild.result != 'SUCCESS'
                }
            }
            steps {
                script {
                    withAWS(credentials: "${AWS_CREDENTIALS_ID}", region: "${REGION}") {
                        echo "üöÄ Creating new EKS cluster..."
                        sh """
                            set -e
                            eksctl create cluster \
                                --name ${CLUSTER_NAME} \
                                --version 1.30 \
                                --region ${REGION} \
                                --nodegroup-name stand-work \
                                --node-type t3.medium \
                                --nodes 2 \
                                --nodes-min 2 \
                                --nodes-max 3 \
                                --managed
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo '‚úÖ EKS cluster creation job completed (or already existed).'
        }
        failure {
            echo '‚ùå EKS cluster creation job failed.'
        }
    }
}
