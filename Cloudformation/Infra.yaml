AWSTemplateFormatVersion: '2010-09-09'
Description: 'FOR us-west-2(oregon), CFN template for primary and replica PostgreSQL DB using default SG and Subnet group & 1 EC2 and Iam role'

Resources:
  EC2Role:
    Type: "AWS::IAM::Role"
    DependsOn: 
      - PrimaryRDSInstance
      - ReplicaRDSInstance
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "EC2S3ReAcc"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'rds:DescribeDBInstances'
                  - 'rds:Connect'
                  - 'rds:ExecuteStatement'
                Resource:
                  - !GetAtt PrimaryRDSInstance.Arn
                  - !GetAtt ReplicaRDSInstance.Arn

              - Effect: "Allow"
                Action:
                  - 's3:ListBucket'
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:DeleteObject'
                Resource: "arn:aws:s3:::twentyseventhbucket/*"

  EC2InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - Ref: "EC2Role"

# EC2 Instance (Master)
  MasterInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.medium
      ImageId: 'ami-************'  # Ubuntu 22.04 AMI  #us-west-2
      SubnetId: subnet-************  #us-west-2a
      KeyName: linked     # For Oregon us-east-2
      IamInstanceProfile: !Ref EC2InstanceProfile
      SecurityGroupIds:
        - sg-************    #us-west-2
      Tags:
        - Key: Name
          Value: 'Master'
      UserData: !Base64 |
        #!/bin/bash
        sudo apt -y install unzip
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        sudo apt update
        aws s3 cp s3://twentyseventhbucket/jenkins-ec2.sh /home/ubuntu/jenkins-ec2.sh
        sudo chmod +x /home/ubuntu/jenkins-ec2.sh
        /home/ubuntu/jenkins-ec2.sh          
    

  # DB Subnet Group for RDS Instances
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: 'Default DB Subnet Group'
      SubnetIds:
        - subnet-************   #us-west-2a
        - subnet-************   #us-west-2b
        - subnet-************   #us-west-2c

  # Primary RDS PostgreSQL Database
  PrimaryRDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: 'MyPrimaryPGDB'
      Engine: 'postgres'
      DBInstanceClass: '************'
      AllocatedStorage: '20'
      MasterUsername: 'shank'
      MasterUserPassword: '************'
      PubliclyAccessible: true
      DBParameterGroupName: '************'
      VPCSecurityGroups:
        - sg-************    #us-west-2
      DBSubnetGroupName: !Ref DBSubnetGroup
      MultiAZ: 'false'
      DBName: 'primarydb'

  # Replica RDS PostgreSQL Database
  ReplicaRDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: 'MyReplicaPGDB'
      Engine: 'postgres'
      DBInstanceClass: 'db.t3.micro'
      AllocatedStorage: '20'
      PubliclyAccessible: true
      DBParameterGroupName: 'newpara'
      VPCSecurityGroups:
        - sg-************    #us-west-2
      MultiAZ: 'false'
      SourceDBInstanceIdentifier: !Ref PrimaryRDSInstance


Outputs:
  PrimaryDBEndpoint:
    Description: "The endpoint of the Primary RDS DB Instance"
    Value: !GetAtt PrimaryRDSInstance.Endpoint.Address
  
  ReplicaDBEndpoint:
    Description: "The endpoint of the Replica RDS DB Instance"
    Value: !GetAtt ReplicaRDSInstance.Endpoint.Address

  MasterInstanceId:
    Description: "Jenkins Master EC2 Instance ID"
    Value: !Ref MasterInstance
